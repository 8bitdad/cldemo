#!/usr/bin/env bash

#--------------------------------------------------------------------------
#
# Copyright 2014 Cumulus Networks, inc  all rights reserved
#
#--------------------------------------------------------------------------

SNAME="cw-mux"

# look for wbench.json
JSONPATH=""
if [ -f "wbench.json" ]
then
    JSONPATH="wbench.json"
elif [ -f "/var/www/wbench.json" ]
then
    JSONPATH="/var/www/wbench.json"
else
    echo "ERROR: wbench.json not found"
    exit 1
fi

# grab wbench details
WBENCHID=`jq '.[] | .workbench.wbench_id' $JSONPATH`
WBENCHCLASS=`jq -r '.[] | .workbench.wbench_class' $JSONPATH`
CUSTNAME=`jq -r '.[] | .customer' $JSONPATH`
RESID=`jq '.[] | .id' $JSONPATH`
ENDDATE=(`jq -r '.[] | .end_date' $JSONPATH`)
NUMSWITCHES=`jq -r '.[] | .workbench.switches | length' $JSONPATH`
NUMSERVERS=`jq -r '.[] | .workbench.servers | length' $JSONPATH`
DIAGRAMSDIR="/usr/local/cumulus/topologies/"

# check for tmux
if ! hash tmux 2>/dev/null; then
    echo "ERROR: tmux not installed"
    exit 1
fi

# make sure topology diagram exists
if [ ! -f "$DIAGRAMSDIR$WBENCHCLASS.txt" ]
then
    echo "ERROR: topology '$WBENCHCLASS' not defined"
    exit 1
fi

# server might not be running already
tmux start-server

# create session if doesn't already exist
if tmux list-sessions | grep -q "$SNAME:"
then
    echo "Existing session"
    tmux att -d -t $SNAME
    exit 0
else
    echo "No session exists"
    tmux new-session -d -s $SNAME -n Overview
    tmux send-keys "cw-mux-helper overview $WBENCHCLASS" 'C-m'
fi

# set up mouse
tmux set-window-option mode-mouse on
tmux set-option mouse-select-pane on
tmux set-option mouse-resize-pane on
tmux set-option mouse-select-window on

# config the status bar
tmux set-option -t $SNAME status-bg green
tmux set-option -t $SNAME status-fg black
tmux set-window-option -g -t $SNAME window-status-current-bg blue
tmux set-window-option -g -t $SNAME window-status-current-fg white
tmux set-option -t $SNAME base-index 1  # not working
tmux set-option -t $SNAME escape-time 0
tmux set-window-option -t $SNAME aggressive-resize on
tmux set-option -t $SNAME status-left "#[fg=black] WB-$WBENCHID "
tmux set-option -t $SNAME status-right "#[bg=black] #[fg=white] $WBENCHCLASS #[fg=black] #[bg=cyan] ResID $RESID #[bg=red] Until $ENDDATE     "

# workbench
tmux new-window -t $SNAME -n Workbench
tmux send-keys 'cw-mux-helper workbench' 'C-m'

# switches
if [ "$NUMSWITCHES" -gt "0" ]
then
    tmux new-window -t $SNAME -n Switches
    if [ "$NUMSWITCHES" -eq "1" ]
    then
        tmux send-keys 'cw-mux-helper switch leaf1' 'C-m'
    elif [ "$NUMSWITCHES" -eq "2" ]
    then
        tmux send-keys 'cw-mux-helper switch leaf1' 'C-m'
        tmux split-window -v -t $SNAME
        tmux send-keys 'cw-mux-helper switch leaf2' 'C-m'
    elif [ "$NUMSWITCHES" -eq "4" ]
    then
         tmux split-window -d -t 0 -v
         tmux split-window -d -t 0 -h
         tmux split-window -d -t 2 -h
         tmux send-keys -t 0 'cw-mux-helper switch spine1' 'C-m'
         tmux send-keys -t 1 'cw-mux-helper switch leaf2' 'C-m'
         tmux send-keys -t 2 'cw-mux-helper switch spine2' 'C-m'
         tmux send-keys -t 3 'cw-mux-helper switch leaf1' 'C-m'
    else
        echo "Unusual number of switches"
    fi
fi

# servers
if [ "$NUMSERVERS" -gt "0" ]
then
    tmux new-window -t $SNAME -n Servers
    if [ "$NUMSERVERS" -eq "2" ]
    then
        tmux send-keys 'cw-mux-helper server server1' 'C-m'
        tmux split-window -v -t $SNAME
        tmux send-keys 'cw-mux-helper server server2' 'C-m'
    else
        echo "Unusual number of switches"
    fi
fi

# apache log
tmux new-window -t $SNAME -n ApacheLog
tmux send-keys 'sudo tail -f /var/log/apache2/access.log' 'C-m'

# focus on first window
tmux select-window -t $SNAME:0

# attach
tmux att -d -t $SNAME

exit 0
